'use strict'; // code generated by pbf v3.0.5

// TrackLines ========================================

var TrackLines = exports.TrackLines = {};

TrackLines.read = function (pbf, end) {
    return pbf.readFields(TrackLines._readField, {trackId: 0, filter: 0, segmentsLengths: [], coordinates: null}, end);
};
TrackLines._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.trackId = pbf.readVarint();
    else if (tag === 2) obj.filter = pbf.readVarint();
    else if (tag === 3) pbf.readPackedVarint(obj.segmentsLengths, true);
    else if (tag === 4) obj.coordinates = pbf.readBytes();
};

// TrackRaster ========================================

var TrackRaster = exports.TrackRaster = {};

TrackRaster.read = function (pbf, end) {
    return pbf.readFields(TrackRaster._readField, {filter: 0, raster: null}, end);
};
TrackRaster._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.filter = pbf.readVarint();
    else if (tag === 2) obj.raster = pbf.readBytes();
};

// Tile ========================================

var Tile = exports.Tile = {};

Tile.read = function (pbf, end) {
    return pbf.readFields(Tile._readField, {rasters: [], tracks: []}, end);
};
Tile._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.rasters.push(TrackRaster.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 2) obj.tracks.push(TrackLines.read(pbf, pbf.readVarint() + pbf.pos));
};

// TileRawLines ========================================

var TileRawLines = exports.TileRawLines = {};

TileRawLines.read = function (pbf, end) {
    return pbf.readFields(TileRawLines._readField, {rasters: [], tracks: []}, end);
};
TileRawLines._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.rasters.push(TrackRaster.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 2) obj.tracks.push(pbf.readBytes());
};
